{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/reece/code/projects/twitter-replier/packages/website/src/pages/login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"h-screen flex flex-col justify-between relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8  max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center lg:text-body-lg mt-4 flex pb-2\",\n          children: [isLogin ? \"Don't have an account?\" : \"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setIsLogin(!isLogin),\n            className: \"text-blue-500 cursor-pointer px-2\",\n            children: isLogin ? \"Sign up\" : \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            className: \"w-full px-4 py-2 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            className: \"w-full px-4 py-2 border border-gray-300 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-black text-white py-2 lg:button-lg\",\n            children: isLogin ? \"Log In\" : \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-full bg-black text-white py-2  mt-4\",\n          children: \"Sign up with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"5tEQvt3DX+eDnHs1jGFT4yITE7I=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","jsxDEV","_jsxDEV","AuthForm","isLogin","setIsLogin","email","setEmail","password","setPassword","className","children","onClick","fileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/reece/code/projects/twitter-replier/packages/website/src/pages/login.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <main className=\"h-screen flex flex-col justify-between relative\">\n      {/* Title with Absolute Positioning */}\n\n      {/* Page Content */}\n      <div className=\"flex-grow flex items-center justify-center\">\n        <div className=\"p-8  max-w-md w-full\">\n          <div className=\"text-center lg:text-body-lg mt-4 flex pb-2\">\n            {isLogin ? \"Don't have an account?\" : \"Already have an account?\"}{\" \"}\n            <span\n              onClick={() => setIsLogin(!isLogin)}\n              className=\"text-blue-500 cursor-pointer px-2\"\n            >\n              {isLogin ? \"Sign up\" : \"Log in\"}\n            </span>\n          </div>\n          <form className=\"space-y-4\">\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className=\"w-full px-4 py-2 border border-gray-300\"\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className=\"w-full px-4 py-2 border border-gray-300 \"\n            />\n            <button\n              type=\"submit\"\n              className=\"w-full bg-black text-white py-2 lg:button-lg\"\n            >\n              {isLogin ? \"Log In\" : \"Sign Up\"}\n            </button>\n          </form>\n\n          {!isLogin && (\n            <button className=\"w-full bg-black text-white py-2  mt-4\">\n              Sign up with Google\n            </button>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEb,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAL,EAAA;EACrB,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACEE,OAAA;IAAMQ,SAAS,EAAC,iDAAiD;IAAAC,QAAA,eAI/DT,OAAA;MAAKQ,SAAS,EAAC,4CAA4C;MAAAC,QAAA,eACzDT,OAAA;QAAKQ,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCT,OAAA;UAAKQ,SAAS,EAAC,4CAA4C;UAAAC,QAAA,GACxDP,OAAO,GAAG,wBAAwB,GAAG,0BAA0B,EAAE,GAAG,eACrEF,OAAA;YACEU,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,CAACD,OAAO,CAAE;YACpCM,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EAE5CP,OAAO,GAAG,SAAS,GAAG;UAAQ;YAAAS,QAAA,EAAAhB,YAAA;YAAAiB,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAF,QAAA,EAAAhB,YAAA;UAAAiB,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNb,OAAA;UAAMQ,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACzBT,OAAA;YACEc,IAAI,EAAC,OAAO;YACZC,WAAW,EAAC,OAAO;YACnBC,KAAK,EAAEZ,KAAM;YACba,QAAQ,EAAGC,CAAC,IAAKb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC1CI,QAAQ;YACRZ,SAAS,EAAC;UAAyC;YAAAG,QAAA,EAAAhB,YAAA;YAAAiB,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,eACFb,OAAA;YACEc,IAAI,EAAC,UAAU;YACfC,WAAW,EAAC,UAAU;YACtBC,KAAK,EAAEV,QAAS;YAChBW,QAAQ,EAAGC,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC7CI,QAAQ;YACRZ,SAAS,EAAC;UAA0C;YAAAG,QAAA,EAAAhB,YAAA;YAAAiB,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,eACFb,OAAA;YACEc,IAAI,EAAC,QAAQ;YACbN,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAEvDP,OAAO,GAAG,QAAQ,GAAG;UAAS;YAAAS,QAAA,EAAAhB,YAAA;YAAAiB,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAF,QAAA,EAAAhB,YAAA;UAAAiB,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAEN,CAACX,OAAO,iBACPF,OAAA;UAAQQ,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAE1D;UAAAE,QAAA,EAAAhB,YAAA;UAAAiB,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAF,QAAA,EAAAhB,YAAA;QAAAiB,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAF,QAAA,EAAAhB,YAAA;MAAAiB,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAF,QAAA,EAAAhB,YAAA;IAAAiB,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACjB,EAAA,CAvDIK,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}