{"ast":null,"code":"var _jsxFileName = \"/Users/reece/code/projects/twitter-replier/packages/website/src/components/Tweets.tsx\";\nimport React from \"react\";\nimport tweetsMock from \"../mockdata/tweets.json\"; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Function to calculate relative time\nconst getRelativeTime = timestamp => {\n  const now = new Date();\n  const tweetDate = new Date(timestamp);\n  const diffInSeconds = Math.floor((now.getTime() - tweetDate.getTime()) / 1000);\n  if (diffInSeconds < 60) {\n    return `${diffInSeconds}s ago`;\n  } else if (diffInSeconds < 3600) {\n    const minutes = Math.floor(diffInSeconds / 60);\n    return `${minutes}min ago`;\n  } else if (diffInSeconds < 86400) {\n    const hours = Math.floor(diffInSeconds / 3600);\n    return `${hours}h ago`;\n  } else {\n    const days = Math.floor(diffInSeconds / 86400);\n    return `${days}d ago`;\n  }\n};\nconst Tweets = () => {\n  // Function to truncate text\n  const truncateText = text => {\n    let maxLength = 200;\n    return text.length > maxLength ? text.slice(0, maxLength) + \"...\" : text;\n  };\n\n  // Filter tweets for userId 1\n  const userId = 1;\n  const userTweets = tweetsMock.filter(tweet => tweet.userId === userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-between p-4 border-2 border-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold p-2\",\n        children: \"Replies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-bold\",\n        children: userTweets.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-l-2 border-r-2 border-black\",\n      children: userTweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => window.open(tweet.link, \"_blank\"),\n        className: \"flex flex-row justify-between items-center p-4 cursor-pointer hover:bg-black hover:text-white border-b-2 border-black transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 flex-grow\",\n          children: truncateText(tweet.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: getRelativeTime(tweet.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, tweet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","tweetsMock","jsxDEV","_jsxDEV","getRelativeTime","timestamp","now","Date","tweetDate","diffInSeconds","Math","floor","getTime","minutes","hours","days","Tweets","truncateText","text","maxLength","length","slice","userId","userTweets","filter","tweet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","window","open","link","id","_c","$RefreshReg$"],"sources":["/Users/reece/code/projects/twitter-replier/packages/website/src/components/Tweets.tsx"],"sourcesContent":["import React from \"react\";\nimport tweetsMock from \"../mockdata/tweets.json\"; // Adjust the path as necessary\nimport Arrow from \"../assets/icon/arrow.svg\";\n\n// Function to calculate relative time\nconst getRelativeTime = (timestamp: string): string => {\n  const now = new Date();\n  const tweetDate = new Date(timestamp);\n  const diffInSeconds = Math.floor(\n    (now.getTime() - tweetDate.getTime()) / 1000\n  );\n\n  if (diffInSeconds < 60) {\n    return `${diffInSeconds}s ago`;\n  } else if (diffInSeconds < 3600) {\n    const minutes = Math.floor(diffInSeconds / 60);\n    return `${minutes}min ago`;\n  } else if (diffInSeconds < 86400) {\n    const hours = Math.floor(diffInSeconds / 3600);\n    return `${hours}h ago`;\n  } else {\n    const days = Math.floor(diffInSeconds / 86400);\n    return `${days}d ago`;\n  }\n};\n\nconst Tweets: React.FC = () => {\n  // Function to truncate text\n  const truncateText = (text: string): string => {\n    let maxLength = 200;\n    return text.length > maxLength ? text.slice(0, maxLength) + \"...\" : text;\n  };\n\n  // Filter tweets for userId 1\n  const userId = 1;\n  const userTweets = tweetsMock.filter((tweet) => tweet.userId === userId);\n\n  return (\n    <div className=\"w-full\">\n      {/* Top row showing replies and count */}\n      <div className=\"flex flex-row justify-between p-4 border-2 border-black\">\n        <div className=\"font-bold p-2\">Replies</div>\n        <div className=\"font-bold\">{userTweets.length}</div>{\" \"}\n        {/* Display the dynamic count */}\n      </div>\n\n      <div className=\"border-l-2 border-r-2 border-black\">\n        {userTweets.map((tweet) => (\n          <div\n            key={tweet.id}\n            onClick={() => window.open(tweet.link, \"_blank\")}\n            className=\"flex flex-row justify-between items-center p-4 cursor-pointer hover:bg-black hover:text-white border-b-2 border-black transition-colors\"\n          >\n            <div className=\"p-2 flex-grow\">{truncateText(tweet.text)}</div>\n\n            <div className=\"\">{getRelativeTime(tweet.timestamp)}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Tweets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}