{"ast":null,"code":"var _jsxFileName = \"/Users/reece/code/projects/twitter-replier/packages/website/src/components/Tweets.tsx\";\nimport React from \"react\";\nimport tweetsMock from \"../mockdata/tweets.json\"; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = () => {\n  // Function to truncate text\n  const truncateText = text => {\n    let maxLength = 50;\n    return text.length > maxLength ? text.slice(0, maxLength) + \"...\" : text;\n  };\n\n  // Filter tweets for userId 1\n  const userId = 1;\n  const userTweets = tweetsMock.filter(tweet => tweet.userId === userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-green-300 w-full h-full p-4 space-y-4\",\n    children: userTweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-between items-start bg-yellow-500 p-4 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 flex-grow\",\n        children: truncateText(tweet.text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-end ml-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: new Date(tweet.timestamp).toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, tweet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","tweetsMock","jsxDEV","_jsxDEV","Tweets","truncateText","text","maxLength","length","slice","userId","userTweets","filter","tweet","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","Date","timestamp","toLocaleTimeString","hour","minute","id","_c","$RefreshReg$"],"sources":["/Users/reece/code/projects/twitter-replier/packages/website/src/components/Tweets.tsx"],"sourcesContent":["import React from \"react\";\nimport tweetsMock from \"../mockdata/tweets.json\"; // Adjust the path as necessary\n\nconst Tweets: React.FC = () => {\n  // Function to truncate text\n  const truncateText = (text: string): string => {\n    let maxLength = 50;\n    return text.length > maxLength ? text.slice(0, maxLength) + \"...\" : text;\n  };\n\n  // Filter tweets for userId 1\n  const userId = 1;\n  const userTweets = tweetsMock.filter((tweet) => tweet.userId === userId);\n\n  return (\n    <div className=\"bg-green-300 w-full h-full p-4 space-y-4\">\n      {userTweets.map((tweet) => (\n        <div\n          key={tweet.id}\n          className=\"flex flex-row justify-between items-start bg-yellow-500 p-4 rounded shadow\"\n        >\n          <div className=\"p-2 flex-grow\">{truncateText(tweet.text)}</div>\n          <div className=\"flex flex-col items-end ml-2\">\n            <div>â†’</div>\n            <div>\n              {new Date(tweet.timestamp).toLocaleTimeString([], {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              })}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Tweets;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAC7B;EACA,MAAMC,YAAY,GAAIC,IAAY,IAAa;IAC7C,IAAIC,SAAS,GAAG,EAAE;IAClB,OAAOD,IAAI,CAACE,MAAM,GAAGD,SAAS,GAAGD,IAAI,CAACG,KAAK,CAAC,CAAC,EAAEF,SAAS,CAAC,GAAG,KAAK,GAAGD,IAAI;EAC1E,CAAC;;EAED;EACA,MAAMI,MAAM,GAAG,CAAC;EAChB,MAAMC,UAAU,GAAGV,UAAU,CAACW,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACH,MAAM,KAAKA,MAAM,CAAC;EAExE,oBACEP,OAAA;IAAKW,SAAS,EAAC,0CAA0C;IAAAC,QAAA,EACtDJ,UAAU,CAACK,GAAG,CAAEH,KAAK,iBACpBV,OAAA;MAEEW,SAAS,EAAC,4EAA4E;MAAAC,QAAA,gBAEtFZ,OAAA;QAAKW,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEV,YAAY,CAACQ,KAAK,CAACP,IAAI;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/DjB,OAAA;QAAKW,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3CZ,OAAA;UAAAY,QAAA,EAAK;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACZjB,OAAA;UAAAY,QAAA,EACG,IAAIM,IAAI,CAACR,KAAK,CAACS,SAAS,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;YAChDC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACV,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GAZDP,KAAK,CAACa,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACO,EAAA,GAhCIvB,MAAgB;AAkCtB,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}